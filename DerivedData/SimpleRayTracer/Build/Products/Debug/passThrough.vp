#version 120
//#extension GL_EXT_geometry_shader4 : enable

//varying vec3 N;
//varying vec3 L;
//varying vec3 E;

void main()
{

//    gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;

    gl_Position = ftransform();
    gl_TexCoord[0] = gl_MultiTexCoord0;

//    vec4 eyePosition = gl_ModelViewMatrix * gl_Vertex;
//    vec4 eyeLightPos = gl_LightSource[0].position;
//    N = normalize(gl_NormalMatrix * gl_Normal);
//    L = normalize(eyeLightPos.xyz - eyePosition.xyz);
//    E = -normalize(eyePosition.xyz);
}

//void main() {
//  for(int i = 0; i < gl_VerticesIn; ++i) {
//    gl_FrontColor = gl_FrontColorIn[i];
//    gl_Position = gl_PositionIn[i];
//    EmitVertex();
//  }
//}

